{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "title": "Polyloft Built-in Packages",
  "description": "Standard library and global functions for Polyloft language",
  "version": "1.0.0",
  "globals": {
    "functions": [
      {
        "name": "println",
        "returnType": "Void",
        "parameters": [
          {
            "name": "args",
            "type": "Any",
            "variadic": true
          }
        ],
        "description": "Prints arguments to stdout followed by a newline"
      },
      {
        "name": "print",
        "returnType": "Void",
        "parameters": [
          {
            "name": "args",
            "type": "Any",
            "variadic": true
          }
        ],
        "description": "Prints arguments to stdout without a newline"
      }
    ],
    "classes": []
  },
  "packages": {
    "Sys": {
      "type": "builtin",
      "description": "System utilities and functions",
      "functions": [
        {
          "name": "time",
          "returnType": "Int",
          "parameters": [
            {
              "name": "format",
              "type": "String",
              "optional": true
            }
          ],
          "description": "Returns current time in milliseconds since epoch. Pass 'float' or 'Float' or 'Double' for Float return type."
        },
        {
          "name": "sleep",
          "returnType": "Void",
          "parameters": [
            {
              "name": "milliseconds",
              "type": "Int"
            }
          ],
          "description": "Suspends execution for the specified number of milliseconds"
        },
        {
          "name": "random",
          "returnType": "Float",
          "parameters": [],
          "description": "Returns a random float between 0.0 and 1.0"
        },
        {
          "name": "seed",
          "returnType": "Void",
          "parameters": [
            {
              "name": "seed",
              "type": "Int"
            }
          ],
          "description": "Seeds the random number generator with the specified value"
        },
        {
          "name": "exit",
          "returnType": "Void",
          "parameters": [
            {
              "name": "args",
              "type": "Any",
              "variadic": true,
              "optional": true
            }
          ],
          "description": "Exits the program with optional arguments"
        },
        {
          "name": "input",
          "returnType": "String",
          "parameters": [
            {
              "name": "prompt",
              "type": "String",
              "optional": true
            },
            {
              "name": "default",
              "type": "Any",
              "optional": true
            },
            {
              "name": "castType",
              "type": "String",
              "optional": true
            }
          ],
          "description": "Reads input from the user. Optional prompt, default value, and cast type ('int', 'float', 'bool', or 'String')"
        },
        {
          "name": "println",
          "returnType": "Void",
          "parameters": [
            {
              "name": "args",
              "type": "Any",
              "variadic": true
            }
          ],
          "description": "Prints arguments to stdout followed by a newline"
        },
        {
          "name": "print",
          "returnType": "Void",
          "parameters": [
            {
              "name": "args",
              "type": "Any",
              "variadic": true
            }
          ],
          "description": "Prints arguments to stdout without a newline"
        },
        {
          "name": "format",
          "returnType": "String",
          "parameters": [
            {
              "name": "format",
              "type": "String"
            },
            {
              "name": "args",
              "type": "Any",
              "variadic": true,
              "optional": true
            }
          ],
          "description": "Formats a string using printf-style formatting"
        },
        {
          "name": "type",
          "returnType": "String",
          "parameters": [
            {
              "name": "value",
              "type": "Any"
            }
          ],
          "description": "Returns the type name of the given value"
        },
        {
          "name": "instanceof",
          "returnType": "Bool",
          "parameters": [
            {
              "name": "value",
              "type": "Any"
            },
            {
              "name": "type",
              "type": "Any"
            }
          ],
          "description": "Checks if a value is an instance of the specified type (can be a string, class, or enum)"
        }
      ]
    },
    "Math": {
      "type": "builtin",
      "description": "Mathematical functions and constants",
      "constants": [
        {
          "name": "PI",
          "type": "Double",
          "value": 3.141592653589793,
          "description": "The mathematical constant Ï€"
        },
        {
          "name": "E",
          "type": "Double",
          "value": 2.718281828459045,
          "description": "The mathematical constant e"
        }
      ],
      "functions": [
        {
          "name": "sqrt",
          "returnType": "Double",
          "parameters": [
            {
              "name": "x",
              "type": "Double"
            }
          ],
          "description": "Returns the square root of x"
        },
        {
          "name": "pow",
          "returnType": "Double",
          "parameters": [
            {
              "name": "base",
              "type": "Double"
            },
            {
              "name": "exponent",
              "type": "Double"
            }
          ],
          "description": "Returns base raised to the power of exponent"
        },
        {
          "name": "abs",
          "returnType": "Double",
          "parameters": [
            {
              "name": "x",
              "type": "Double"
            }
          ],
          "description": "Returns the absolute value of x"
        },
        {
          "name": "sin",
          "returnType": "Double",
          "parameters": [
            {
              "name": "x",
              "type": "Double"
            }
          ],
          "description": "Returns the sine of x (x in radians)"
        },
        {
          "name": "cos",
          "returnType": "Double",
          "parameters": [
            {
              "name": "x",
              "type": "Double"
            }
          ],
          "description": "Returns the cosine of x (x in radians)"
        },
        {
          "name": "tan",
          "returnType": "Double",
          "parameters": [
            {
              "name": "x",
              "type": "Double"
            }
          ],
          "description": "Returns the tangent of x (x in radians)"
        },
        {
          "name": "floor",
          "returnType": "Double",
          "parameters": [
            {
              "name": "x",
              "type": "Double"
            }
          ],
          "description": "Returns the largest integer less than or equal to x"
        },
        {
          "name": "ceil",
          "returnType": "Double",
          "parameters": [
            {
              "name": "x",
              "type": "Double"
            }
          ],
          "description": "Returns the smallest integer greater than or equal to x"
        },
        {
          "name": "round",
          "returnType": "Double",
          "parameters": [
            {
              "name": "x",
              "type": "Double"
            }
          ],
          "description": "Returns x rounded to the nearest integer"
        },
        {
          "name": "min",
          "returnType": "Double",
          "parameters": [
            {
              "name": "a",
              "type": "Double"
            },
            {
              "name": "b",
              "type": "Double"
            }
          ],
          "description": "Returns the smaller of a and b"
        },
        {
          "name": "max",
          "returnType": "Double",
          "parameters": [
            {
              "name": "a",
              "type": "Double"
            },
            {
              "name": "b",
              "type": "Double"
            }
          ],
          "description": "Returns the larger of a and b"
        }
      ]
    },
    "Regex": {
      "type": "builtin",
      "description": "Regular expression utilities for pattern matching and text processing",
      "functions": [
        {
          "name": "match",
          "returnType": "Array[String]",
          "parameters": [
            {
              "name": "text",
              "type": "String"
            },
            {
              "name": "pattern",
              "type": "String"
            }
          ],
          "description": "Returns all matches of the pattern in the text as an array"
        },
        {
          "name": "test",
          "returnType": "Bool",
          "parameters": [
            {
              "name": "text",
              "type": "String"
            },
            {
              "name": "pattern",
              "type": "String"
            }
          ],
          "description": "Tests if the pattern matches the text, returns true or false"
        },
        {
          "name": "replace",
          "returnType": "String",
          "parameters": [
            {
              "name": "text",
              "type": "String"
            },
            {
              "name": "pattern",
              "type": "String"
            },
            {
              "name": "replacement",
              "type": "String"
            }
          ],
          "description": "Replaces all occurrences of pattern in text with replacement"
        },
        {
          "name": "split",
          "returnType": "Array[String]",
          "parameters": [
            {
              "name": "text",
              "type": "String"
            },
            {
              "name": "pattern",
              "type": "String"
            }
          ],
          "description": "Splits the text by the pattern and returns an array of parts"
        },
        {
          "name": "find",
          "returnType": "String",
          "parameters": [
            {
              "name": "text",
              "type": "String"
            },
            {
              "name": "pattern",
              "type": "String"
            }
          ],
          "description": "Returns the first match of the pattern in the text, or empty string if not found"
        },
        {
          "name": "findAll",
          "returnType": "Array[String]",
          "parameters": [
            {
              "name": "text",
              "type": "String"
            },
            {
              "name": "pattern",
              "type": "String"
            }
          ],
          "description": "Returns all matches of the pattern in the text as an array"
        }
      ]
    }
  },
  "standardLibrary": {
    "math.vector": {
      "path": "libs/math/vector",
      "description": "Vector mathematics library",
      "exports": [
        {
          "name": "Vec2",
          "type": "class",
          "description": "2D vector class with x and y components"
        },
        {
          "name": "Vec3",
          "type": "class",
          "description": "3D vector class with x, y, and z components"
        },
        {
          "name": "Vec4",
          "type": "class",
          "description": "4D vector class with x, y, z, and w components"
        }
      ]
    },
    "utils": {
      "path": "libs/utils",
      "description": "General utility functions",
      "exports": [
        {
          "name": "add",
          "type": "function",
          "returnType": "Int",
          "parameters": [
            { "name": "a", "type": "Int" },
            { "name": "b", "type": "Int" }
          ],
          "description": "Adds two integers"
        },
        {
          "name": "greet",
          "type": "function",
          "returnType": "Void",
          "parameters": [
            { "name": "name", "type": "String" }
          ],
          "description": "Prints a greeting message"
        }
      ]
    }
  }
}
